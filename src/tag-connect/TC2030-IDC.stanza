#use-added-syntax(jitx)
defpackage debug/tag-connect/TC2030-IDC :
  import core

  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/symbols
  import jsl/landpatterns/pads
  import jsl/landpatterns

pcb-landpattern TC2030-IDC-NL-footprint :
  ; landing pads
  for (l in grid-locs(2, 3, 1.27, 1.27), i in [2 4 6 1 3 5]) do :
    pad p[i] : testpoint-pad(0.787) at l
  
  ; alignment holes
  layer(Cutout()) = Circle((- 2.54), 0.0, 0.4955)
  layer(Cutout()) = Circle(2.54, 1.016, 0.4955)
  layer(Cutout()) = Circle(2.54, (- 1.016), 0.4955)

  layer(Courtyard(Top)) = Rectangle(6.08, 3.032 )
  ref-label()

pcb-landpattern TC2030-IDC-footprint :
  ; landing pads
  for (l in grid-locs(2, 3, 1.27, 1.27), i in [2 4 6 1 3 5]) do :
    pad p[i] : testpoint-pad(0.787) at l
  
  ; alignment holes
  layer(Cutout()) = Circle((- 2.54), 0.0, 0.4955)
  layer(Cutout()) = Circle(2.54, 1.016, 0.4955)
  layer(Cutout()) = Circle(2.54, (- 1.016), 0.4955)

  ; legs
  layer(Cutout()) = Circle((-2.54), 2.54, 1.1875)
  layer(Cutout()) = Circle((-2.54), (-2.54), 1.1875)
  layer(Cutout()) = Circle(0.635, 2.54, 1.1875)
  layer(Cutout()) = Circle(0.635, (-2.54), 1.1875)

  layer(Courtyard(Top)) = Rectangle(7.75, 8.5, loc((-0.692), 0.0))
  ref-label()

public pcb-component component (no-legs?:True|False = false) :
  description = "Insertion point for TC-2030 connector"
  datasheet = "https://www.tag-connect.com/wp-content/uploads/bsk-pdf-manager/2019/12/TC2030-IDC-Datasheet-Rev-B.pdf"
  manufacturer = "Tag-Connect"
  mpn = 
    if no-legs? : "TC2030-IDC-NL"
    else : "TC2030-IDC"
  property(self.trust) = "built"
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir ]
    [p[1]    | 1            | Left     ]
    [p[2]    | 2            | Right    ]
    [p[3]    | 3            | Left     ]
    [p[4]    | 4            | Right    ]
    [p[5]    | 5            | Left     ]
    [p[6]    | 6            | Right    ]

  ; Generate box symbol
  val box = BoxSymbol(self)
  val sym = create-symbol(box)
  assign-symbol(sym)

  if no-legs? :
    assign-landpattern(TC2030-IDC-NL-footprint)
  else :
    assign-landpattern(TC2030-IDC-footprint)

  reference-prefix = "J"

  ; TODO : maybe move these to a module?
  val swd-bundle = swd(SWD-SWO)
  supports swd-bundle :
    swd-bundle.swdio  => self.p[2]
    swd-bundle.swdclk => self.p[4]
    swd-bundle.swo => self.p[6]

  supports power:
    power.V+ => self.p[1]
    power.V- => self.p[5]

  supports reset:
    reset.reset => self.p[3]
